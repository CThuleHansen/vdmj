
#############################################################################
package com.fujitsu.vdmj.tc.definitions to plugins.doc.definitions;
#############################################################################

map TCDefinitionList{} to DOCDefinitionList(this);
map TCAccessSpecifier{isStatic, isAsync, access, isPure} to DOCAccessSpecifier(isStatic, isAsync, access, isPure);
map TCAssignmentDefinition{accessSpecifier, name, type, expression} to DOCAssignmentDefinition(accessSpecifier, name, type, expression);
map TCBUSClassDefinition{name, supernames, definitions} to DOCBUSClassDefinition(name, supernames, definitions);
map TCClassDefinition{annotations, name, supernames, definitions} to DOCClassDefinition(annotations, name, supernames, definitions);
map TCClassInvariantDefinition{accessSpecifier, name, expression} to DOCClassInvariantDefinition(accessSpecifier, name, expression);
map TCClassList{} to DOCClassList(this);
map TCCPUClassDefinition{name, supernames, definitions} to DOCCPUClassDefinition(name, supernames, definitions);
map TCDefinition{comments} to DOCDefinition() set comments;
map TCDefinitionSet{} to DOCDefinitionSet();
map TCEqualsDefinition{location, pattern, typebind, bind, test} to DOCEqualsDefinition(location, pattern, typebind, bind, test);
map TCExplicitFunctionDefinition{annotations, accessSpecifier, name, typeParams, type, paramPatternList, body, precondition, postcondition, isTypeInvariant, measure} to DOCExplicitFunctionDefinition(annotations, accessSpecifier, name, typeParams, type, paramPatternList, body, precondition, postcondition, isTypeInvariant, measure);
map TCExplicitOperationDefinition{annotations, accessSpecifier, name, type, parameterPatterns, precondition, postcondition, body} to DOCExplicitOperationDefinition(annotations, accessSpecifier, name, type, parameterPatterns, precondition, postcondition, body);
map TCExternalDefinition{state, readOnly} to DOCExternalDefinition(state, readOnly);
map TCImplicitFunctionDefinition{annotations, accessSpecifier, name, typeParams, parameterPatterns, result, body, precondition, postcondition, measureExp} to DOCImplicitFunctionDefinition(annotations, accessSpecifier, name, typeParams, parameterPatterns, result, body, precondition, postcondition, measureExp);
map TCImplicitOperationDefinition{annotations, accessSpecifier, name, parameterPatterns, result, body, externals, precondition, postcondition, errors} to DOCImplicitOperationDefinition(annotations, accessSpecifier, name, parameterPatterns, result, body, externals, precondition, postcondition, errors);
map TCImportedDefinition{location, def} to DOCImportedDefinition(location, def);
map TCInheritedDefinition{accessSpecifier, name, superdef} to DOCInheritedDefinition(accessSpecifier, name, superdef);
map TCInstanceVariableDefinition{annotations, accessSpecifier, name, type, expression} to DOCInstanceVariableDefinition(annotations, accessSpecifier, name, type, expression);
map TCLocalDefinition{location, name, type} to DOCLocalDefinition(location, name, type);
map TCMultiBindListDefinition{location, bindings} to DOCMultiBindListDefinition(location, bindings);
map TCMutexSyncDefinition{annotations, location, operations} to DOCMutexSyncDefinition(annotations, location, operations);
map TCNamedTraceDefinition{annotations, location, name, terms} to DOCNamedTraceDefinition(annotations, location, name, terms);
map TCPerSyncDefinition{annotations, location, opname, guard} to DOCPerSyncDefinition(annotations, location, opname, guard);
map TCRenamedDefinition{name, def} to DOCRenamedDefinition(name, def);
map TCStateDefinition{name, fields, invPattern, invExpression, initPattern, initExpression} to DOCStateDefinition(name, fields, invPattern, invExpression, initPattern, initExpression);
map TCSystemDefinition{name, definitions} to DOCSystemDefinition(name, definitions);
map TCThreadDefinition{statement} to DOCThreadDefinition(statement);
map TCTypeDefinition{annotations, accessSpecifier, name, type, invPattern, invExpression, eqPattern1, eqPattern2, eqExpression, ordPattern1, ordPattern2, ordExpression} to DOCTypeDefinition(annotations, accessSpecifier, name, type, invPattern, invExpression, eqPattern1, eqPattern2, eqExpression, ordPattern1, ordPattern2, ordExpression);
map TCUntypedDefinition{location, name} to DOCUntypedDefinition(location, name);
map TCValueDefinition{nameScope, annotations, accessSpecifier, pattern, type, exp} to DOCValueDefinition(nameScope, annotations, accessSpecifier, pattern, type, exp);

#############################################################################
package com.fujitsu.vdmj.tc.expressions to plugins.doc.expressions;
#############################################################################

map TCExpression{comments} to DOCExpression() set comments;
map TCExpressionList{} to DOCExpressionList(this);
map TCAbsoluteExpression{location, exp} to DOCAbsoluteExpression(location, exp);
map TCAndExpression{left, op, right} to DOCAndExpression(left, op, right);
map TCApplyExpression{root, args} to DOCApplyExpression(root, args);
map TCBinaryExpression{} to DOCBinaryExpression();
map TCBooleanBinaryExpression{} to DOCBooleanBinaryExpression();
map TCBooleanLiteralExpression{value} to DOCBooleanLiteralExpression(value);
map TCCardinalityExpression{location, exp} to DOCCardinalityExpression(location, exp);
map TCCaseAlternative{cexp, pattern, result} to DOCCaseAlternative(cexp, pattern, result);
map TCCaseAlternativeList{} to DOCCaseAlternativeList(this);
map TCCasesExpression{location, exp, cases, others} to DOCCasesExpression(location, exp, cases, others);
map TCCharLiteralExpression{value} to DOCCharLiteralExpression(value);
map TCCompExpression{left, op, right} to DOCCompExpression(left, op, right);
map TCDefExpression{location, localDefs, expression} to DOCDefExpression(location, localDefs, expression);
map TCDistConcatExpression{location, exp} to DOCDistConcatExpression(location, exp);
map TCDistIntersectExpression{location, exp} to DOCDistIntersectExpression(location, exp);
map TCDistMergeExpression{location, exp} to DOCDistMergeExpression(location, exp);
map TCDistUnionExpression{location, exp} to DOCDistUnionExpression(location, exp);
map TCDivExpression{left, op, right} to DOCDivExpression(left, op, right);
map TCDivideExpression{left, op, right} to DOCDivideExpression(left, op, right);
map TCDomainResByExpression{left, op, right} to DOCDomainResByExpression(left, op, right);
map TCDomainResToExpression{left, op, right} to DOCDomainResToExpression(left, op, right);
map TCElementsExpression{location, exp} to DOCElementsExpression(location, exp);
map TCElseIfExpression{location, elseIfExp, thenExp} to DOCElseIfExpression(location, elseIfExp, thenExp);
map TCElseIfExpressionList{} to DOCElseIfExpressionList(this);
map TCEqualsExpression{left, op, right} to DOCEqualsExpression(left, op, right);
map TCEquivalentExpression{left, op, right} to DOCEquivalentExpression(left, op, right);
map TCExists1Expression{location, bind, predicate} to DOCExists1Expression(location, bind, predicate);
map TCExistsExpression{location, bindList, predicate} to DOCExistsExpression(location, bindList, predicate);
map TCFieldExpression{object, field, memberName} to DOCFieldExpression(object, field, memberName);
map TCFieldNumberExpression{tuple, field} to DOCFieldNumberExpression(tuple, field);
map TCFloorExpression{location, exp} to DOCFloorExpression(location, exp);
map TCForAllExpression{location, bindList, predicate} to DOCForAllExpression(location, bindList, predicate);
map TCFuncInstantiationExpression{function, actualTypes} to DOCFuncInstantiationExpression(function, actualTypes);
map TCGreaterEqualExpression{left, op, right} to DOCGreaterEqualExpression(left, op, right);
map TCGreaterExpression{left, op, right} to DOCGreaterExpression(left, op, right);
map TCHeadExpression{location, exp} to DOCHeadExpression(location, exp);
map TCHistoryExpression{location, hop, opnames} to DOCHistoryExpression(location, hop, opnames);
map TCIfExpression{location, ifExp, thenExp, elseList, elseExp} to DOCIfExpression(location, ifExp, thenExp, elseList, elseExp);
map TCImpliesExpression{left, op, right} to DOCImpliesExpression(left, op, right);
map TCIndicesExpression{location, exp} to DOCIndicesExpression(location, exp);
map TCInSetExpression{left, op, right} to DOCInSetExpression(left, op, right);
map TCIntegerLiteralExpression{value} to DOCIntegerLiteralExpression(value);
map TCIotaExpression{location, bind, predicate} to DOCIotaExpression(location, bind, predicate);
map TCIsExpression{location, typename, basictype, test} to DOCIsExpression(location, typename, basictype, test);
map TCIsOfBaseClassExpression{location, baseclass, exp} to DOCIsOfBaseClassExpression(location, baseclass, exp);
map TCIsOfClassExpression{location, classname, exp} to DOCIsOfClassExpression(location, classname, exp);
map TCLambdaExpression{location, bindList, expression} to DOCLambdaExpression(location, bindList, expression);
map TCLenExpression{location, exp} to DOCLenExpression(location, exp);
map TCLessEqualExpression{left, op, right} to DOCLessEqualExpression(left, op, right);
map TCLessExpression{left, op, right} to DOCLessExpression(left, op, right);
map TCLetBeStExpression{location, bind, suchThat, value} to DOCLetBeStExpression(location, bind, suchThat, value);
map TCLetDefExpression{location, localDefs, expression} to DOCLetDefExpression(location, localDefs, expression);
map TCMapCompExpression{location, first, bindings, predicate} to DOCMapCompExpression(location, first, bindings, predicate);
map TCMapDomainExpression{location, exp} to DOCMapDomainExpression(location, exp);
map TCMapEnumExpression{location, members} to DOCMapEnumExpression(location, members);
map TCMapExpression{} to DOCMapExpression();
map TCMapInverseExpression{location, exp} to DOCMapInverseExpression(location, exp);
map TCMapletExpression{left, right} to DOCMapletExpression(left, right);
map TCMapletExpressionList{} to DOCMapletExpressionList(this);
map TCMapRangeExpression{location, exp} to DOCMapRangeExpression(location, exp);
map TCMapUnionExpression{left, op, right} to DOCMapUnionExpression(left, op, right);
map TCMkBasicExpression{type, arg} to DOCMkBasicExpression(type, arg);
map TCMkTypeExpression{typename, args} to DOCMkTypeExpression(typename, args);
map TCModExpression{left, op, right} to DOCModExpression(left, op, right);
map TCMuExpression{location, record, modifiers} to DOCMuExpression(location, record, modifiers);
map TCNarrowExpression{location, typename, basictype, test} to DOCNarrowExpression(location, typename, basictype, test);
map TCNewExpression{location, classname, args} to DOCNewExpression(location, classname, args);
map TCNilExpression{location} to DOCNilExpression(location);
map TCNotEqualExpression{left, op, right} to DOCNotEqualExpression(left, op, right);
map TCNotExpression{location, exp} to DOCNotExpression(location, exp);
map TCNotInSetExpression{left, op, right} to DOCNotInSetExpression(left, op, right);
map TCNotYetSpecifiedExpression{location} to DOCNotYetSpecifiedExpression(location);
map TCNumericBinaryExpression{} to DOCNumericBinaryExpression();
map TCOrExpression{left, op, right} to DOCOrExpression(left, op, right);
map TCPlusExpression{left, op, right} to DOCPlusExpression(left, op, right);
map TCPlusPlusExpression{left, op, right} to DOCPlusPlusExpression(left, op, right);
map TCPostOpExpression{opname, preexpression, postexpression, errors, state} to DOCPostOpExpression(opname, preexpression, postexpression, errors, state);
map TCPowerSetExpression{location, exp} to DOCPowerSetExpression(location, exp);
map TCPreExpression{location, function, args} to DOCPreExpression(location, function, args);
map TCPreOpExpression{opname, expression, errors, state} to DOCPreOpExpression(opname, expression, errors, state);
map TCProperSubsetExpression{left, op, right} to DOCProperSubsetExpression(left, op, right);
map TCQuoteLiteralExpression{location, type} to DOCQuoteLiteralExpression(location, type);
map TCRangeResByExpression{left, op, right} to DOCRangeResByExpression(left, op, right);
map TCRangeResToExpression{left, op, right} to DOCRangeResToExpression(left, op, right);
map TCRealLiteralExpression{value} to DOCRealLiteralExpression(value);
map TCRecordModifier{tag, value} to DOCRecordModifier(tag, value);
map TCRecordModifierList{} to DOCRecordModifierList(this);
map TCRemExpression{left, op, right} to DOCRemExpression(left, op, right);
map TCReverseExpression{location, exp} to DOCReverseExpression(location, exp);
map TCSameBaseClassExpression{location, left, right} to DOCSameBaseClassExpression(location, left, right);
map TCSameClassExpression{location, left, right} to DOCSameClassExpression(location, left, right);
map TCSelfExpression{location} to DOCSelfExpression(location);
map TCSeqCompExpression{location, first, bind, predicate} to DOCSeqCompExpression(location, first, bind, predicate);
map TCSeqConcatExpression{left, op, right} to DOCSeqConcatExpression(left, op, right);
map TCSeqEnumExpression{location, members} to DOCSeqEnumExpression(location, members);
map TCSeqExpression{} to DOCSeqExpression();
map TCSetCompExpression{location, first, bindings, predicate} to DOCSetCompExpression(location, first, bindings, predicate);
map TCSetDifferenceExpression{left, op, right} to DOCSetDifferenceExpression(left, op, right);
map TCSetEnumExpression{location, members} to DOCSetEnumExpression(location, members);
map TCSetExpression{} to DOCSetExpression();
map TCSetIntersectExpression{left, op, right} to DOCSetIntersectExpression(left, op, right);
map TCSetRangeExpression{location, first, last} to DOCSetRangeExpression(location, first, last);
map TCSetUnionExpression{left, op, right} to DOCSetUnionExpression(left, op, right);
map TCStarStarExpression{left, op, right} to DOCStarStarExpression(left, op, right);
map TCStateInitExpression{state} to DOCStateInitExpression(state);
map TCStringLiteralExpression{value} to DOCStringLiteralExpression(value);
map TCSubclassResponsibilityExpression{location} to DOCSubclassResponsibilityExpression(location);
map TCSubseqExpression{seq, from, to} to DOCSubseqExpression(seq, from, to);
map TCSubsetExpression{left, op, right} to DOCSubsetExpression(left, op, right);
map TCSubtractExpression{left, op, right} to DOCSubtractExpression(left, op, right);
map TCTailExpression{location, exp} to DOCTailExpression(location, exp);
map TCThreadIdExpression{location} to DOCThreadIdExpression(location);
map TCTimeExpression{location} to DOCTimeExpression(location);
map TCTimesExpression{left, op, right} to DOCTimesExpression(left, op, right);
map TCTupleExpression{location, args} to DOCTupleExpression(location, args);
map TCUnaryExpression{} to DOCUnaryExpression();
map TCUnaryMinusExpression{location, exp} to DOCUnaryMinusExpression(location, exp);
map TCUnaryPlusExpression{location, exp} to DOCUnaryPlusExpression(location, exp);
map TCUndefinedExpression{location} to DOCUndefinedExpression(location);
map TCVariableExpression{location, name, original} to DOCVariableExpression(location, name, original);

#############################################################################
package com.fujitsu.vdmj.tc.annotations to plugins.doc.annotations;
#############################################################################

map TCAnnotatedExpression{location, annotation, expression} to DOCAnnotatedExpression(location, annotation, expression);
map TCAnnotatedStatement{location, annotation, statement} to DOCAnnotatedStatement(location, annotation, statement);
map TCAnnotation{} to DOCAnnotation();
map TCAnnotationList{} to DOCAnnotationList(this);

#############################################################################
package com.fujitsu.vdmj.tc.lex to plugins.doc.lex;
#############################################################################

map TCNameToken{} to DOCNameToken(this);
map TCNameList{} to DOCNameList(this);
map TCIdentifierToken{} to DOCIdentifierToken(this);
unmapped com.fujitsu.vdmj.ast.lex.LexIntegerToken;
unmapped com.fujitsu.vdmj.ast.lex.LexBooleanToken;
unmapped com.fujitsu.vdmj.ast.lex.LexCharacterToken;
unmapped com.fujitsu.vdmj.ast.lex.LexIntegerToken;
unmapped com.fujitsu.vdmj.ast.lex.LexKeywordToken;
unmapped com.fujitsu.vdmj.ast.lex.LexQuoteToken;
unmapped com.fujitsu.vdmj.ast.lex.LexRealToken;
unmapped com.fujitsu.vdmj.ast.lex.LexStringToken;
unmapped com.fujitsu.vdmj.ast.lex.LexComment;
unmapped com.fujitsu.vdmj.ast.lex.LexCommentList;
unmapped com.fujitsu.vdmj.lex.LexLocation;
unmapped com.fujitsu.vdmj.lex.Token;

#############################################################################
package com.fujitsu.vdmj.tc.modules to plugins.doc.modules;
#############################################################################

map TCModuleList{} to DOCModuleList(this);
map TCExportList{} to DOCExportList(this);
map TCImportList{} to DOCImportList(this);
map TCModule{annotations, name, imports, exports, defs, files, isFlat, comments} to DOCModule(annotations, name, imports, exports, defs, files, isFlat) set comments;
map TCModuleImports{name, imports} to DOCModuleImports(name, imports);
map TCModuleExports{exports} to DOCModuleExports(exports);
map TCExport{} to DOCExport();
map TCExportAll{location} to DOCExportAll(location);
map TCExportedFunction{location, nameList, type, typeParams} to DOCExportedFunction(location, nameList, type, typeParams);
map TCExportedOperation{location, nameList, type} to DOCExportedOperation(location, nameList, type);
map TCExportedType{name, struct} to DOCExportedType(name, struct);
map TCExportedValue{location, nameList, type} to DOCExportedValue(location, nameList, type);
map TCImport{} to DOCImport();
map TCImportAll{name} to DOCImportAll(name);
map TCImportedFunction{name, type, typeParams, renamed} to DOCImportedFunction(name, type, typeParams, renamed);
map TCImportedOperation{name, type, renamed} to DOCImportedOperation(name, type, renamed);
map TCImportedType{name, def, renamed} to DOCImportedType(name, def, renamed);
map TCImportedValue{name, type, renamed} to DOCImportedValue(name, type, renamed);
map TCImportFromModule{name, signatures} to DOCImportFromModule(name, signatures);
map TCImportFromModuleList{} to DOCImportFromModuleList(this);

#############################################################################
package com.fujitsu.vdmj.tc.patterns to plugins.doc.patterns;
#############################################################################

map TCBind{} to DOCBind();
map TCBooleanPattern{value} to DOCBooleanPattern(value);
map TCCharacterPattern{value} to DOCCharacterPattern(value);
map TCConcatenationPattern{left, location, right} to DOCConcatenationPattern(left, location, right);
map TCExpressionPattern{exp} to DOCExpressionPattern(exp);
map TCIdentifierPattern{name} to DOCIdentifierPattern(name);
map TCIgnorePattern{location} to DOCIgnorePattern(location);
map TCIntegerPattern{value} to DOCIntegerPattern(value);
map TCMapletPattern{from, to} to DOCMapletPattern(from, to);
map TCMapletPatternList{} to DOCMapletPatternList(this);
map TCMapPattern{location, maplets} to DOCMapPattern(location, maplets);
map TCMapUnionPattern{left, location, right} to DOCMapUnionPattern(left, location, right);
map TCMultipleBind{} to DOCMultipleBind();
map TCMultipleBindList{} to DOCMultipleBindList(this);
map TCMultipleSeqBind{plist, sequence} to DOCMultipleSeqBind(plist, sequence);
map TCMultipleSetBind{plist, set} to DOCMultipleSetBind(plist, set);
map TCMultipleTypeBind{plist, type} to DOCMultipleTypeBind(plist, type);
map TCNamePatternPair{name, pattern} to DOCNamePatternPair(name, pattern);
map TCNamePatternPairList{} to DOCNamePatternPairList(this);
map TCNilPattern{location} to DOCNilPattern(location);
map TCObjectPattern{location, classname, fieldlist} to DOCObjectPattern(location, classname, fieldlist);
map TCPattern{} to DOCPattern();
map TCPatternList{} to DOCPatternList(this);
map TCPatternListList{} to DOCPatternListList(this);
map TCPatternBind{location, pattern, bind} to DOCPatternBind(location, pattern, bind);
map TCQuotePattern{value} to DOCQuotePattern(value);
map TCRealPattern{value} to DOCRealPattern(value);
map TCRecordPattern{typename, plist} to DOCRecordPattern(typename, plist);
map TCSeqBind{pattern, sequence} to DOCSeqBind(pattern, sequence);
map TCSeqPattern{location, plist} to DOCSeqPattern(location, plist);
map TCSetBind{pattern, set} to DOCSetBind(pattern, set);
map TCSetPattern{location, plist} to DOCSetPattern(location, plist);
map TCStringPattern{value} to DOCStringPattern(value);
map TCTuplePattern{location, plist} to DOCTuplePattern(location, plist);
map TCTypeBind{pattern, type} to DOCTypeBind(pattern, type);
map TCTypeBindList{} to DOCTypeBindList(this);
map TCUnionPattern{left, location, right} to DOCUnionPattern(left, location, right);

#############################################################################
package com.fujitsu.vdmj.tc.statements to plugins.doc.statements;
#############################################################################

map TCAlwaysStatement{location, always, body} to DOCAlwaysStatement(location, always, body);
map TCAssignmentStatement{location, target, exp} to DOCAssignmentStatement(location, target, exp);
map TCAssignmentStatementList{} to DOCAssignmentStatementList(this);
map TCAtomicStatement{location, assignments} to DOCAtomicStatement(location, assignments);
map TCBlockStatement{location, assignmentDefs, statements} to DOCBlockStatement(location, assignmentDefs, statements);
map TCCallObjectStatement{designator, classname, fieldname, args} to DOCCallObjectStatement(designator, classname, fieldname, args);
map TCCallStatement{name, args} to DOCCallStatement(name, args);
map TCCasesStatement{location, exp, cases, others} to DOCCasesStatement(location, exp, cases, others);
map TCCaseStmtAlternative{pattern, statement} to DOCCaseStmtAlternative(pattern, statement);
map TCCaseStmtAlternativeList{} to DOCCaseStmtAlternativeList(this);
map TCClassInvariantStatement{name, invdefs} to DOCClassInvariantStatement(name, invdefs);
map TCCyclesStatement{location, cycles, statement} to DOCCyclesStatement(location, cycles, statement);
map TCDefStatement{location, localDefs, statement} to DOCDefStatement(location, localDefs, statement);
map TCDurationStatement{location, duration, statement} to DOCDurationStatement(location, duration, statement);
map TCElseIfStatement{location, elseIfExp, thenStmt} to DOCElseIfStatement(location, elseIfExp, thenStmt);
map TCElseIfStatementList{} to DOCElseIfStatementList(this);
map TCErrorCase{name, left, right} to DOCErrorCase(name, left, right);
map TCErrorCaseList{} to DOCErrorCaseList(this);
map TCErrorStatement{location} to DOCErrorStatement(location);
map TCExitStatement{location, expression} to DOCExitStatement(location, expression);
map TCExternalClause{mode, identifiers, type} to DOCExternalClause(mode, identifiers, type);
map TCExternalClauseList{} to DOCExternalClauseList(this);
map TCFieldDesignator{object, field} to DOCFieldDesignator(object, field);
map TCForAllStatement{location, pattern, set, statement} to DOCForAllStatement(location, pattern, set, statement);
map TCForIndexStatement{location, var, from, to, by, statement} to DOCForIndexStatement(location, var, from, to, by, statement);
map TCForPatternBindStatement{location, patternBind, reverse, exp, statement} to DOCForPatternBindStatement(location, patternBind, reverse, exp, statement);
map TCIdentifierDesignator{name} to DOCIdentifierDesignator(name);
map TCIfStatement{location, ifExp, thenStmt, elseList, elseStmt} to DOCIfStatement(location, ifExp, thenStmt, elseList, elseStmt);
map TCLetBeStStatement{location, bind, suchThat, statement} to DOCLetBeStStatement(location, bind, suchThat, statement);
map TCLetDefStatement{location, localDefs, statement} to DOCLetDefStatement(location, localDefs, statement);
map TCMapSeqDesignator{mapseq, exp} to DOCMapSeqDesignator(mapseq, exp);
map TCNonDeterministicStatement{location, statements} to DOCNonDeterministicStatement(location, statements);
map TCNotYetSpecifiedStatement{location} to DOCNotYetSpecifiedStatement(location);
map TCObjectApplyDesignator{object, args} to DOCObjectApplyDesignator(object, args);
map TCObjectDesignator{} to DOCObjectDesignator();
map TCObjectFieldDesignator{object, classname, fieldname} to DOCObjectFieldDesignator(object, classname, fieldname);
map TCObjectIdentifierDesignator{name} to DOCObjectIdentifierDesignator(name);
map TCObjectNewDesignator{expression} to DOCObjectNewDesignator(expression);
map TCObjectSelfDesignator{location} to DOCObjectSelfDesignator(location);
map TCPeriodicStatement{opname, args} to DOCPeriodicStatement(opname, args);
map TCReturnStatement{location, expression} to DOCReturnStatement(location, expression);
map TCSimpleBlockStatement{} to DOCSimpleBlockStatement();
map TCSkipStatement{location} to DOCSkipStatement(location);
map TCSpecificationStatement{location, externals, precondition, postcondition, errors} to DOCSpecificationStatement(location, externals, precondition, postcondition, errors);
map TCSporadicStatement{opname, args} to DOCSporadicStatement(opname, args);
map TCStartStatement{location, objects} to DOCStartStatement(location, objects);
map TCStateDesignator{} to DOCStateDesignator();
map TCStatement{comments} to DOCStatement() set comments;
map TCStatementList{} to DOCStatementList(this);
map TCStopStatement{location, objects} to DOCStopStatement(location, objects);
map TCSubclassResponsibilityStatement{location} to DOCSubclassResponsibilityStatement(location);
map TCTixeStatement{location, traps, body} to DOCTixeStatement(location, traps, body);
map TCTixeStmtAlternative{patternBind, statement} to DOCTixeStmtAlternative(patternBind, statement);
map TCTixeStmtAlternativeList{} to DOCTixeStmtAlternativeList(this);
map TCTrapStatement{location, patternBind, with, body} to DOCTrapStatement(location, patternBind, with, body);
map TCWhileStatement{location, exp, statement} to DOCWhileStatement(location, exp, statement);

#############################################################################
package com.fujitsu.vdmj.tc.traces to plugins.doc.traces;
#############################################################################

map TCTraceApplyExpression{callStatement} to DOCTraceApplyExpression(callStatement);
map TCTraceBracketedExpression{location, terms} to DOCTraceBracketedExpression(location, terms);
map TCTraceConcurrentExpression{location, defs} to DOCTraceConcurrentExpression(location, defs);
map TCTraceCoreDefinition{} to DOCTraceCoreDefinition();
map TCTraceDefinition{} to DOCTraceDefinition();
map TCTraceDefinitionList{} to DOCTraceDefinitionList(this);
map TCTraceDefinitionTerm{} to DOCTraceDefinitionTerm(this);
map TCTraceDefinitionTermList{} to DOCTraceDefinitionTermList(this);
map TCTraceLetBeStBinding{location, bind, stexp, body} to DOCTraceLetBeStBinding(location, bind, stexp, body);
map TCTraceLetDefBinding{location, localDefs, body} to DOCTraceLetDefBinding(location, localDefs, body);
map TCTraceRepeatDefinition{location, core, from, to} to DOCTraceRepeatDefinition(location, core, from, to);

#############################################################################
package com.fujitsu.vdmj.tc.types to plugins.doc.types;
#############################################################################

map TCType{} to DOCType();
map TCTypeList{} to DOCTypeList(this);
map TCBasicType{} to DOCBasicType();
map TCBooleanType{location} to DOCBooleanType(location);
map TCBracketType{type} to DOCBracketType(type);
map TCCharacterType{location} to DOCCharacterType(location);
map TCClassType{location, classdef} to DOCClassType(location, classdef);
map TCField{tagname, tag, type, equalityAbstraction} to DOCField(tagname, tag, type, equalityAbstraction);
map TCFieldList{} to DOCFieldList(this);
map TCFunctionType{location, parameters, partial, result} to DOCFunctionType(location, parameters, partial, result);
map TCInMapType{location, from, to} to DOCInMapType(location, from, to);
map TCInvariantType{} to DOCInvariantType();
map TCMapType{location, from, to} to DOCMapType(location, from, to);
map TCNamedType{typename, type} to DOCNamedType(typename, type);
map TCNaturalOneType{location} to DOCNaturalOneType(location);
map TCNaturalType{location} to DOCNaturalType(location);
map TCIntegerType{location} to DOCIntegerType(location);
map TCNumericType{} to DOCNumericType();
map TCOperationType{location, parameters, result} to DOCOperationType(location, parameters, result);
map TCOptionalType{location, type} to DOCOptionalType(location, type);
map TCParameterType{name} to DOCParameterType(name);
map TCPatternListTypePair{patterns, type} to DOCPatternListTypePair(patterns, type);
map TCPatternListTypePairList{} to DOCPatternListTypePairList(this);
map TCPatternTypePair{pattern, type} to DOCPatternTypePair(pattern, type);
map TCProductType{location, types} to DOCProductType(location, types);
map TCQuoteType{location, value} to DOCQuoteType(location, value);
map TCRationalType{location} to DOCRationalType(location);
map TCRealType{location} to DOCRealType(location);
map TCRecordType{name, fields, composed} to DOCRecordType(name, fields, composed);
map TCSeq1Type{location, seqof} to DOCSeq1Type(location, seqof);
map TCSeqType{location, seqof} to DOCSeqType(location, seqof);
map TCSetType{location, setof} to DOCSetType(location, setof);
map TCSet1Type{location, setof} to DOCSet1Type(location, setof);
map TCTokenType{location} to DOCTokenType(location);
map TCTypeSet{} to DOCTypeSet(this);
map TCUndefinedType{location} to DOCUndefinedType(location);
map TCUnionType{location, types} to DOCUnionType(location, types);
map TCUnknownType{location} to DOCUnknownType(location);
map TCUnresolvedType{typename} to DOCUnresolvedType(typename);
map TCVoidReturnType{location} to DOCVoidReturnType(location);
map TCVoidType{location} to DOCVoidType(location);
unmapped java.lang.Boolean;
unmapped java.lang.String;
unmapped java.lang.Long;
unmapped com.fujitsu.vdmj.mapper.FileList;
unmapped com.fujitsu.vdmj.typechecker.NameScope;
